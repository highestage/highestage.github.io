define(["Tone/core/Tone","Tone/signal/Signal","Tone/signal/Expr","Tone/component/Merge"],function(Tone){"use strict";Tone.MidSideMerge=function(){Tone.call(this,2,0);this.mid=this.input[0]=this.context.createGain();this._left=new Tone.Expr("($0 + $1) * $2");this.side=this.input[1]=this.context.createGain();this._right=new Tone.Expr("($0 - $1) * $2");this._merge=this.output=new Tone.Merge();this.mid.connect(this._left,0,0);this.side.connect(this._left,0,1);this.mid.connect(this._right,0,0);this.side.connect(this._right,0,1);this._left.connect(this._merge,0,0);this._right.connect(this._merge,0,1);sqrtTwo.connect(this._left,0,2);sqrtTwo.connect(this._right,0,2)};Tone.extend(Tone.MidSideMerge);var sqrtTwo=null;Tone._initAudioContext(function(){sqrtTwo=new Tone.Signal(1/Math.sqrt(2))});Tone.MidSideMerge.prototype.dispose=function(){Tone.prototype.dispose.call(this);this.mid.disconnect();this.mid=null;this.side.disconnect();this.side=null;this._left.dispose();this._left=null;this._right.dispose();this._right=null;this._merge.dispose();this._merge=null;return this};return Tone.MidSideMerge})