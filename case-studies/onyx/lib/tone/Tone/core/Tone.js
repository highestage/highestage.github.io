define(function(){"use strict";function isUndef(val){return val===void 0}
function isFunction(val){return typeof val==="function"}
var audioContext;if(isUndef(window.AudioContext)){window.AudioContext=window.webkitAudioContext}
if(isUndef(window.OfflineAudioContext)){window.OfflineAudioContext=window.webkitOfflineAudioContext}
if(!isUndef(AudioContext)){audioContext=new AudioContext()}else{throw new Error("Web Audio is not supported in this browser")}
if(!isFunction(AudioContext.prototype.createGain)){AudioContext.prototype.createGain=AudioContext.prototype.createGainNode}
if(!isFunction(AudioContext.prototype.createDelay)){AudioContext.prototype.createDelay=AudioContext.prototype.createDelayNode}
if(!isFunction(AudioContext.prototype.createPeriodicWave)){AudioContext.prototype.createPeriodicWave=AudioContext.prototype.createWaveTable}
if(!isFunction(AudioBufferSourceNode.prototype.start)){AudioBufferSourceNode.prototype.start=AudioBufferSourceNode.prototype.noteGrainOn}
if(!isFunction(AudioBufferSourceNode.prototype.stop)){AudioBufferSourceNode.prototype.stop=AudioBufferSourceNode.prototype.noteOff}
if(!isFunction(AudioBuffer.prototype.copyToChannel)){AudioBuffer.prototype.copyToChannel=function(source,channelNumber,startInChannel){var clipped=source.subarray(0,Math.min(source.length,this.length-(startInChannel|0)));this.getChannelData(channelNumber|0).set(clipped,startInChannel|0)}}
if(!isFunction(OscillatorNode.prototype.start)){OscillatorNode.prototype.start=OscillatorNode.prototype.noteOn}
if(!isFunction(OscillatorNode.prototype.stop)){OscillatorNode.prototype.stop=OscillatorNode.prototype.noteOff}
if(!isFunction(OscillatorNode.prototype.setPeriodicWave)){OscillatorNode.prototype.setPeriodicWave=OscillatorNode.prototype.setWaveTable}
AudioNode.prototype._nativeConnect=AudioNode.prototype.connect;AudioNode.prototype.connect=function(B,outNum,inNum){if(B.input){if(Array.isArray(B.input)){if(isUndef(inNum)){inNum=0}
this.connect(B.input[inNum])}else{this.connect(B.input,outNum,inNum)}}else{try{if(B instanceof AudioNode){this._nativeConnect(B,outNum,inNum)}else{this._nativeConnect(B,outNum)}}catch(e){throw new Error("error connecting to node: "+B)}}};var Tone=function(inputs,outputs){if(isUndef(inputs)||inputs===1){this.input=this.context.createGain()}else if(inputs>1){this.input=new Array(inputs)}
if(isUndef(outputs)||outputs===1){this.output=this.context.createGain()}else if(outputs>1){this.output=new Array(inputs)}};Tone.prototype.set=function(params,value,rampTime){if(this.isObject(params)){rampTime=value}else if(this.isString(params)){var tmpObj={};tmpObj[params]=value;params=tmpObj}
for(var attr in params){value=params[attr];var parent=this;if(attr.indexOf(".")!==-1){var attrSplit=attr.split(".");for(var i=0;i<attrSplit.length-1;i++){parent=parent[attrSplit[i]]}
attr=attrSplit[attrSplit.length-1]}
var param=parent[attr];if(isUndef(param)){continue}
if((Tone.Signal&&param instanceof Tone.Signal)||(Tone.Param&&param instanceof Tone.Param)){if(param.value!==value){if(isUndef(rampTime)){param.value=value}else{param.rampTo(value,rampTime)}}}else if(param instanceof AudioParam){if(param.value!==value){param.value=value}}else if(param instanceof Tone){param.set(value)}else if(param!==value){parent[attr]=value}}
return this};Tone.prototype.get=function(params){if(isUndef(params)){params=this._collectDefaults(this.constructor)}else if(this.isString(params)){params=[params]}
var ret={};for(var i=0;i<params.length;i++){var attr=params[i];var parent=this;var subRet=ret;if(attr.indexOf(".")!==-1){var attrSplit=attr.split(".");for(var j=0;j<attrSplit.length-1;j++){var subAttr=attrSplit[j];subRet[subAttr]=subRet[subAttr]||{};subRet=subRet[subAttr];parent=parent[subAttr]}
attr=attrSplit[attrSplit.length-1]}
var param=parent[attr];if(this.isObject(params[attr])){subRet[attr]=param.get()}else if(Tone.Signal&&param instanceof Tone.Signal){subRet[attr]=param.value}else if(Tone.Param&&param instanceof Tone.Param){subRet[attr]=param.value}else if(param instanceof AudioParam){subRet[attr]=param.value}else if(param instanceof Tone){subRet[attr]=param.get()}else if(!isFunction(param)&&!isUndef(param)){subRet[attr]=param}}
return ret};Tone.prototype._collectDefaults=function(constr){var ret=[];if(!isUndef(constr.defaults)){ret=Object.keys(constr.defaults)}
if(!isUndef(constr._super)){var superDefs=this._collectDefaults(constr._super);for(var i=0;i<superDefs.length;i++){if(ret.indexOf(superDefs[i])===-1){ret.push(superDefs[i])}}}
return ret};Tone.prototype.toString=function(){for(var className in Tone){var isLetter=className[0].match(/^[A-Z]$/);var sameConstructor=Tone[className]===this.constructor;if(isFunction(Tone[className])&&isLetter&&sameConstructor){return className}}
return"Tone"};Tone.context=audioContext;Tone.prototype.context=Tone.context;Tone.prototype.bufferSize=2048;Tone.prototype.blockTime=128/Tone.context.sampleRate;Tone.prototype.dispose=function(){if(!this.isUndef(this.input)){if(this.input instanceof AudioNode){this.input.disconnect()}
this.input=null}
if(!this.isUndef(this.output)){if(this.output instanceof AudioNode){this.output.disconnect()}
this.output=null}
return this};var _silentNode=null;Tone.prototype.noGC=function(){this.output.connect(_silentNode);return this};AudioNode.prototype.noGC=function(){this.connect(_silentNode);return this};Tone.prototype.connect=function(unit,outputNum,inputNum){if(Array.isArray(this.output)){outputNum=this.defaultArg(outputNum,0);this.output[outputNum].connect(unit,0,inputNum)}else{this.output.connect(unit,outputNum,inputNum)}
return this};Tone.prototype.disconnect=function(outputNum){if(Array.isArray(this.output)){outputNum=this.defaultArg(outputNum,0);this.output[outputNum].disconnect()}else{this.output.disconnect()}
return this};Tone.prototype.connectSeries=function(){if(arguments.length>1){var currentUnit=arguments[0];for(var i=1;i<arguments.length;i++){var toUnit=arguments[i];currentUnit.connect(toUnit);currentUnit=toUnit}}
return this};Tone.prototype.connectParallel=function(){var connectFrom=arguments[0];if(arguments.length>1){for(var i=1;i<arguments.length;i++){var connectTo=arguments[i];connectFrom.connect(connectTo)}}
return this};Tone.prototype.chain=function(){if(arguments.length>0){var currentUnit=this;for(var i=0;i<arguments.length;i++){var toUnit=arguments[i];currentUnit.connect(toUnit);currentUnit=toUnit}}
return this};Tone.prototype.fan=function(){if(arguments.length>0){for(var i=0;i<arguments.length;i++){this.connect(arguments[i])}}
return this};AudioNode.prototype.chain=Tone.prototype.chain;AudioNode.prototype.fan=Tone.prototype.fan;Tone.prototype.defaultArg=function(given,fallback){if(this.isObject(given)&&this.isObject(fallback)){var ret={};for(var givenProp in given){ret[givenProp]=this.defaultArg(fallback[givenProp],given[givenProp])}
for(var fallbackProp in fallback){ret[fallbackProp]=this.defaultArg(given[fallbackProp],fallback[fallbackProp])}
return ret}else{return isUndef(given)?fallback:given}};Tone.prototype.optionsObject=function(values,keys,defaults){var options={};if(values.length===1&&this.isObject(values[0])){options=values[0]}else{for(var i=0;i<keys.length;i++){options[keys[i]]=values[i]}}
if(!this.isUndef(defaults)){return this.defaultArg(options,defaults)}else{return options}};Tone.prototype.isUndef=isUndef;Tone.prototype.isFunction=isFunction;Tone.prototype.isNumber=function(arg){return(typeof arg==="number")};Tone.prototype.isObject=function(arg){return(Object.prototype.toString.call(arg)==="[object Object]"&&arg.constructor===Object)};Tone.prototype.isBoolean=function(arg){return(typeof arg==="boolean")};Tone.prototype.isArray=function(arg){return(Array.isArray(arg))};Tone.prototype.isString=function(arg){return(typeof arg==="string")};Tone.noOp=function(){};Tone.prototype._readOnly=function(property){if(Array.isArray(property)){for(var i=0;i<property.length;i++){this._readOnly(property[i])}}else{Object.defineProperty(this,property,{writable:!1,enumerable:!0,})}};Tone.prototype._writable=function(property){if(Array.isArray(property)){for(var i=0;i<property.length;i++){this._writable(property[i])}}else{Object.defineProperty(this,property,{writable:!0,})}};Tone.State={Started:"started",Stopped:"stopped",Paused:"paused",};Tone.prototype.equalPowerScale=function(percent){var piFactor=0.5*Math.PI;return Math.sin(percent*piFactor)};Tone.prototype.dbToGain=function(db){return Math.pow(2,db/6)};Tone.prototype.gainToDb=function(gain){return 20*(Math.log(gain)/ Math.LN10);
	};

	/
Tone.prototype.now=function(){return this.context.currentTime};Tone.extend=function(child,parent){if(isUndef(parent)){parent=Tone}
function TempConstructor(){}
TempConstructor.prototype=parent.prototype;child.prototype=new TempConstructor();child.prototype.constructor=child;child._super=parent};var newContextCallbacks=[];Tone._initAudioContext=function(callback){callback(Tone.context);newContextCallbacks.push(callback)};Tone.setContext=function(ctx){Tone.prototype.context=ctx;Tone.context=ctx;for(var i=0;i<newContextCallbacks.length;i++){newContextCallbacks[i](ctx)}};Tone.startMobile=function(){var osc=Tone.context.createOscillator();var silent=Tone.context.createGain();silent.gain.value=0;osc.connect(silent);silent.connect(Tone.context.destination);var now=Tone.context.currentTime;osc.start(now);osc.stop(now+1)};Tone.isSafari=Object.prototype.toString.call(window.HTMLElement).indexOf('Constructor')>0;Tone._initAudioContext(function(audioContext){Tone.prototype.blockTime=128/audioContext.sampleRate;_silentNode=audioContext.createGain();_silentNode.gain.value=0;_silentNode.connect(audioContext.destination)});Tone.version="r6";console.log("%c * Tone.js "+Tone.version+" * ","background: #000; color: #fff");return Tone})