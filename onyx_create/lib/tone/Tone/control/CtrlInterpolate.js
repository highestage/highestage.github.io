define(["Tone/core/Tone","Tone/core/Type"],function(Tone){"use strict";Tone.CtrlInterpolate=function(){var options=this.optionsObject(arguments,["values","index"],Tone.CtrlInterpolate.defaults);this.values=options.values;this.index=options.index};Tone.extend(Tone.CtrlInterpolate);Tone.CtrlInterpolate.defaults={"index":0,"values":[]};Object.defineProperty(Tone.CtrlInterpolate.prototype,"value",{get:function(){var index=this.index;index=Math.min(index,this.values.length-1);var lowerPosition=Math.floor(index);var lower=this.values[lowerPosition];var upper=this.values[Math.ceil(index)];return this._interpolate(index-lowerPosition,lower,upper)}});Tone.CtrlInterpolate.prototype._interpolate=function(index,lower,upper){if(this.isArray(lower)){var retArray=[];for(var i=0;i<lower.length;i++){retArray[i]=this._interpolate(index,lower[i],upper[i])}
return retArray}else if(this.isObject(lower)){var retObj={};for(var attr in lower){retObj[attr]=this._interpolate(index,lower[attr],upper[attr])}
return retObj}else{lower=this._toNumber(lower);upper=this._toNumber(upper);return(1-index)*lower+index*upper}};Tone.CtrlInterpolate.prototype._toNumber=function(val){if(this.isNumber(val)){return val}else if(this.isNote(val)){return this.toFrequency(val)}else{return this.toSeconds(val)}};Tone.CtrlInterpolate.prototype.dispose=function(){this.values=null};return Tone.CtrlInterpolate})