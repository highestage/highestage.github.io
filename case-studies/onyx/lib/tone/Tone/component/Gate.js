define(["Tone/core/Tone","Tone/component/Follower","Tone/signal/GreaterThan"],function(Tone){"use strict";Tone.Gate=function(){Tone.call(this);var options=this.optionsObject(arguments,["threshold","attack","release"],Tone.Gate.defaults);this._follower=new Tone.Follower(options.attack,options.release);this._gt=new Tone.GreaterThan(this.dbToGain(options.threshold));this.input.connect(this.output);this.input.chain(this._gt,this._follower,this.output.gain)};Tone.extend(Tone.Gate);Tone.Gate.defaults={"attack":0.1,"release":0.1,"threshold":-40};Object.defineProperty(Tone.Gate.prototype,"threshold",{get:function(){return this.gainToDb(this._gt.value)},set:function(thresh){this._gt.value=this.dbToGain(thresh)}});Object.defineProperty(Tone.Gate.prototype,"attack",{get:function(){return this._follower.attack},set:function(attackTime){this._follower.attack=attackTime}});Object.defineProperty(Tone.Gate.prototype,"release",{get:function(){return this._follower.release},set:function(releaseTime){this._follower.release=releaseTime}});Tone.Gate.prototype.dispose=function(){Tone.prototype.dispose.call(this);this._follower.dispose();this._gt.dispose();this._follower=null;this._gt=null;return this};return Tone.Gate})