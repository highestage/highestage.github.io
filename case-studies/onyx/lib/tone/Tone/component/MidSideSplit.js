define(["Tone/core/Tone","Tone/signal/Expr","Tone/signal/Signal","Tone/component/Split"],function(Tone){"use strict";Tone.MidSideSplit=function(){Tone.call(this,0,2);this._split=this.input=new Tone.Split();this.mid=this.output[0]=new Tone.Expr("($0 + $1) * $2");this.side=this.output[1]=new Tone.Expr("($0 - $1) * $2");this._split.connect(this.mid,0,0);this._split.connect(this.mid,1,1);this._split.connect(this.side,0,0);this._split.connect(this.side,1,1);sqrtTwo.connect(this.mid,0,2);sqrtTwo.connect(this.side,0,2)};Tone.extend(Tone.MidSideSplit);var sqrtTwo=null;Tone._initAudioContext(function(){sqrtTwo=new Tone.Signal(1/Math.sqrt(2))});Tone.MidSideSplit.prototype.dispose=function(){Tone.prototype.dispose.call(this);this.mid.dispose();this.mid=null;this.side.dispose();this.side=null;this._split.dispose();this._split=null;return this};return Tone.MidSideSplit})