define(["Tone/core/Tone","Tone/component/MultibandSplit","Tone/component/Compressor"],function(Tone){"use strict";Tone.MultibandCompressor=function(options){options=this.defaultArg(arguments,Tone.MultibandCompressor.defaults);this._splitter=this.input=new Tone.MultibandSplit({"lowFrequency":options.lowFrequency,"highFrequency":options.highFrequency});this.lowFrequency=this._splitter.lowFrequency;this.highFrequency=this._splitter.highFrequency;this.output=this.context.createGain();this.low=new Tone.Compressor(options.low);this.mid=new Tone.Compressor(options.mid);this.high=new Tone.Compressor(options.high);this._splitter.low.chain(this.low,this.output);this._splitter.mid.chain(this.mid,this.output);this._splitter.high.chain(this.high,this.output);this._readOnly(["high","mid","low","highFrequency","lowFrequency"])};Tone.extend(Tone.MultibandCompressor);Tone.MultibandCompressor.defaults={"low":Tone.Compressor.defaults,"mid":Tone.Compressor.defaults,"high":Tone.Compressor.defaults,"lowFrequency":250,"highFrequency":2000};Tone.MultibandCompressor.prototype.dispose=function(){Tone.prototype.dispose.call(this);this._splitter.dispose();this._writable(["high","mid","low","highFrequency","lowFrequency"]);this.low.dispose();this.mid.dispose();this.high.dispose();this._splitter=null;this.low=null;this.mid=null;this.high=null;this.lowFrequency=null;this.highFrequency=null;return this};return Tone.MultibandCompressor})