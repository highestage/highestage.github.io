define(["Tone/core/Tone","Tone/core/Param"],function(Tone){"use strict";Tone.Compressor=function(){var options=this.optionsObject(arguments,["threshold","ratio"],Tone.Compressor.defaults);this._compressor=this.input=this.output=this.context.createDynamicsCompressor();this.threshold=this._compressor.threshold;this.attack=new Tone.Param(this._compressor.attack,Tone.Type.Time);this.release=new Tone.Param(this._compressor.release,Tone.Type.Time);this.knee=this._compressor.knee;this.ratio=this._compressor.ratio;this._readOnly(["knee","release","attack","ratio","threshold"]);this.set(options)};Tone.extend(Tone.Compressor);Tone.Compressor.defaults={"ratio":12,"threshold":-24,"release":0.25,"attack":0.003,"knee":30};Tone.Compressor.prototype.dispose=function(){Tone.prototype.dispose.call(this);this._writable(["knee","release","attack","ratio","threshold"]);this._compressor.disconnect();this._compressor=null;this.attack.dispose();this.attack=null;this.release.dispose();this.release=null;this.threshold=null;this.ratio=null;this.knee=null;return this};return Tone.Compressor})