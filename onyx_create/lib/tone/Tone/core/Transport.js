define(["Tone/core/Tone","Tone/core/Clock","Tone/core/Type","Tone/core/Timeline","Tone/core/Emitter","Tone/core/Gain","Tone/core/IntervalTimeline"],function(Tone){"use strict";Tone.Transport=function(){Tone.Emitter.call(this);this.loop=!1;this._loopStart=0;this._loopEnd=0;this._ppq=TransportConstructor.defaults.PPQ;this._clock=new Tone.Clock({"callback":this._processTick.bind(this),"frequency":0,});this.bpm=this._clock.frequency;this.bpm._toUnits=this._toUnits.bind(this);this.bpm._fromUnits=this._fromUnits.bind(this);this.bpm.units=Tone.Type.BPM;this.bpm.value=TransportConstructor.defaults.bpm;this._readOnly("bpm");this._timeSignature=TransportConstructor.defaults.timeSignature;this._scheduledEvents={};this._eventID=0;this._timeline=new Tone.Timeline();this._repeatedEvents=new Tone.IntervalTimeline();this._onceEvents=new Tone.Timeline();this._syncedSignals=[];var swingSeconds=this.notationToSeconds(TransportConstructor.defaults.swingSubdivision,TransportConstructor.defaults.bpm,TransportConstructor.defaults.timeSignature);this._swingTicks=(swingSeconds/(60/TransportConstructor.defaults.bpm))*this._ppq;this._swingAmount=0};Tone.extend(Tone.Transport,Tone.Emitter);Tone.Transport.defaults={"bpm":120,"swing":0,"swingSubdivision":"16n","timeSignature":4,"loopStart":0,"loopEnd":"4m","PPQ":48};Tone.Transport.prototype._processTick=function(tickTime){if(this._swingAmount>0&&this._clock.ticks%this._ppq!==0&&this._clock.ticks%this._swingTicks===0){tickTime+=this.ticksToSeconds(this._swingTicks)*this._swingAmount}
if(this.loop){if(this._clock.ticks===this._loopEnd){this.ticks=this._loopStart;this.trigger("loop",tickTime)}}
var ticks=this._clock.ticks;this._timeline.forEachAtTime(ticks,function(event){event.callback(tickTime)});this._repeatedEvents.forEachOverlap(ticks,function(event){if((ticks-event.time)%event.interval===0){event.callback(tickTime)}});this._onceEvents.forEachBefore(ticks,function(event){event.callback(tickTime)});this._onceEvents.cancelBefore(ticks)};Tone.Transport.prototype.schedule=function(callback,time){var event={"time":this.toTicks(time),"callback":callback};var id=this._eventID++;this._scheduledEvents[id.toString()]={"event":event,"timeline":this._timeline};this._timeline.addEvent(event);return id};Tone.Transport.prototype.scheduleRepeat=function(callback,interval,startTime,duration){if(interval<=0){throw new Error("repeat events must have an interval larger than 0")}
var event={"time":this.toTicks(startTime),"duration":this.toTicks(this.defaultArg(duration,Infinity)),"interval":this.toTicks(interval),"callback":callback};var id=this._eventID++;this._scheduledEvents[id.toString()]={"event":event,"timeline":this._repeatedEvents};this._repeatedEvents.addEvent(event);return id};Tone.Transport.prototype.scheduleOnce=function(callback,time){var event={"time":this.toTicks(time),"callback":callback};var id=this._eventID++;this._scheduledEvents[id.toString()]={"event":event,"timeline":this._onceEvents};this._onceEvents.addEvent(event);return id};Tone.Transport.prototype.clear=function(eventId){if(this._scheduledEvents.hasOwnProperty(eventId)){var item=this._scheduledEvents[eventId.toString()];item.timeline.removeEvent(item.event);delete this._scheduledEvents[eventId.toString()]}
return this};Tone.Transport.prototype.cancel=function(after){after=this.defaultArg(after,0);after=this.toTicks(after);this._timeline.cancel(after);this._onceEvents.cancel(after);this._repeatedEvents.cancel(after);return this};Tone.Transport.prototype.quantize=function(time,subdivision){subdivision=this.defaultArg(subdivision,"4n");var tickTime=this.toTicks(time);subdivision=this.toTicks(subdivision);var remainingTicks=subdivision-(tickTime%subdivision);if(remainingTicks===subdivision){remainingTicks=0}
var now=this.now();if(this.state===Tone.State.Started){now=this._clock._nextTick}
return this.toSeconds(time,now)+this.ticksToSeconds(remainingTicks)};Object.defineProperty(Tone.Transport.prototype,"state",{get:function(){return this._clock.getStateAtTime(this.now())}});Tone.Transport.prototype.start=function(time,offset){time=this.toSeconds(time);if(!this.isUndef(offset)){offset=this.toTicks(offset)}else{offset=this.defaultArg(offset,this._clock.ticks)}
this._clock.start(time,offset);this.trigger("start",time,this.ticksToSeconds(offset));return this};Tone.Transport.prototype.stop=function(time){time=this.toSeconds(time);this._clock.stop(time);this.trigger("stop",time);return this};Tone.Transport.prototype.pause=function(time){time=this.toSeconds(time);this._clock.pause(time);this.trigger("pause",time);return this};Object.defineProperty(Tone.Transport.prototype,"timeSignature",{get:function(){return this._timeSignature},set:function(timeSig){if(this.isArray(timeSig)){timeSig=(timeSig[0]/timeSig[1])*4}
this._timeSignature=timeSig}});Object.defineProperty(Tone.Transport.prototype,"loopStart",{get:function(){return this.ticksToSeconds(this._loopStart)},set:function(startPosition){this._loopStart=this.toTicks(startPosition)}});Object.defineProperty(Tone.Transport.prototype,"loopEnd",{get:function(){return this.ticksToSeconds(this._loopEnd)},set:function(endPosition){this._loopEnd=this.toTicks(endPosition)}});Tone.Transport.prototype.setLoopPoints=function(startPosition,endPosition){this.loopStart=startPosition;this.loopEnd=endPosition;return this};Object.defineProperty(Tone.Transport.prototype,"swing",{get:function(){return this._swingAmount*2},set:function(amount){this._swingAmount=amount*0.5}});Object.defineProperty(Tone.Transport.prototype,"swingSubdivision",{get:function(){return this.toNotation(this._swingTicks+"i")},set:function(subdivision){this._swingTicks=this.toTicks(subdivision)}});Object.defineProperty(Tone.Transport.prototype,"position",{get:function(){var quarters=this.ticks/this._ppq;var measures=Math.floor(quarters/this._timeSignature);var sixteenths=((quarters%1)*4);if(sixteenths%1>0){sixteenths=sixteenths.toFixed(3)}
quarters=Math.floor(quarters)%this._timeSignature;var progress=[measures,quarters,sixteenths];return progress.join(":")},set:function(progress){var ticks=this.toTicks(progress);this.ticks=ticks}});Object.defineProperty(Tone.Transport.prototype,"progress",{get:function(){if(this.loop){return(this.ticks-this._loopStart)/(this._loopEnd-this._loopStart)}else{return 0}}});Object.defineProperty(Tone.Transport.prototype,"ticks",{get:function(){return this._clock.ticks},set:function(t){this._clock.ticks=t}});Object.defineProperty(Tone.Transport.prototype,"PPQ",{get:function(){return this._ppq},set:function(ppq){this._ppq=ppq;this.bpm.value=this.bpm.value}});Tone.Transport.prototype._fromUnits=function(bpm){return 1/(60/bpm/this.PPQ)};Tone.Transport.prototype._toUnits=function(freq){return(freq/this.PPQ)*60};Tone.Transport.prototype.syncSignal=function(signal,ratio){if(!ratio){if(signal._param.value!==0){ratio=signal._param.value/this.bpm._param.value}else{ratio=0}}
var ratioSignal=new Tone.Gain(ratio);this.bpm.chain(ratioSignal,signal._param);this._syncedSignals.push({"ratio":ratioSignal,"signal":signal,"initial":signal._param.value});signal._param.value=0;return this};Tone.Transport.prototype.unsyncSignal=function(signal){for(var i=this._syncedSignals.length-1;i>=0;i--){var syncedSignal=this._syncedSignals[i];if(syncedSignal.signal===signal){syncedSignal.ratio.dispose();syncedSignal.signal._param.value=syncedSignal.initial;this._syncedSignals.splice(i,1)}}
return this};Tone.Transport.prototype.dispose=function(){Tone.Emitter.prototype.dispose.call(this);this._clock.dispose();this._clock=null;this._writable("bpm");this.bpm=null;this._timeline.dispose();this._timeline=null;this._onceEvents.dispose();this._onceEvents=null;this._repeatedEvents.dispose();this._repeatedEvents=null;return this};Tone.Transport.prototype.setInterval=function(callback,interval){console.warn("This method is deprecated. Use Tone.Transport.scheduleRepeat instead.");return Tone.Transport.scheduleRepeat(callback,interval)};Tone.Transport.prototype.clearInterval=function(id){console.warn("This method is deprecated. Use Tone.Transport.clear instead.");return Tone.Transport.clear(id)};Tone.Transport.prototype.setTimeout=function(callback,timeout){console.warn("This method is deprecated. Use Tone.Transport.scheduleOnce instead.");return Tone.Transport.scheduleOnce(callback,timeout)};Tone.Transport.prototype.clearTimeout=function(id){console.warn("This method is deprecated. Use Tone.Transport.clear instead.");return Tone.Transport.clear(id)};Tone.Transport.prototype.setTimeline=function(callback,time){console.warn("This method is deprecated. Use Tone.Transport.schedule instead.");return Tone.Transport.schedule(callback,time)};Tone.Transport.prototype.clearTimeline=function(id){console.warn("This method is deprecated. Use Tone.Transport.clear instead.");return Tone.Transport.clear(id)};var TransportConstructor=Tone.Transport;Tone._initAudioContext(function(){if(typeof Tone.Transport==="function"){Tone.Transport=new Tone.Transport()}else{Tone.Transport.stop();var prevSettings=Tone.Transport.get();Tone.Transport.dispose();TransportConstructor.call(Tone.Transport);Tone.Transport.set(prevSettings)}});return Tone.Transport})