define(["Tone/core/Tone","Tone/source/Oscillator","Tone/signal/Scale","Tone/signal/Signal","Tone/signal/AudioToGain","Tone/core/Type"],function(Tone){"use strict";Tone.LFO=function(){var options=this.optionsObject(arguments,["frequency","min","max"],Tone.LFO.defaults);this._oscillator=new Tone.Oscillator({"frequency":options.frequency,"type":options.type,});this.frequency=this._oscillator.frequency;this.amplitude=this._oscillator.volume;this.amplitude.units=Tone.Type.NormalRange;this.amplitude.value=options.amplitude;this._stoppedSignal=new Tone.Signal(0,Tone.Type.AudioRange);this._stoppedValue=0;this._a2g=new Tone.AudioToGain();this._scaler=this.output=new Tone.Scale(options.min,options.max);this._units=Tone.Type.Default;this.units=options.units;this._oscillator.chain(this._a2g,this._scaler);this._stoppedSignal.connect(this._a2g);this._readOnly(["amplitude","frequency"]);this.phase=options.phase};Tone.extend(Tone.LFO,Tone.Oscillator);Tone.LFO.defaults={"type":"sine","min":0,"max":1,"phase":0,"frequency":"4n","amplitude":1,"units":Tone.Type.Default};Tone.LFO.prototype.start=function(time){time=this.toSeconds(time);this._stoppedSignal.setValueAtTime(0,time);this._oscillator.start(time);return this};Tone.LFO.prototype.stop=function(time){time=this.toSeconds(time);this._stoppedSignal.setValueAtTime(this._stoppedValue,time);this._oscillator.stop(time);return this};Tone.LFO.prototype.sync=function(delay){this._oscillator.sync(delay);this._oscillator.syncFrequency();return this};Tone.LFO.prototype.unsync=function(){this._oscillator.unsync();this._oscillator.unsyncFrequency();return this};Object.defineProperty(Tone.LFO.prototype,"min",{get:function(){return this._toUnits(this._scaler.min)},set:function(min){min=this._fromUnits(min);this._scaler.min=min}});Object.defineProperty(Tone.LFO.prototype,"max",{get:function(){return this._toUnits(this._scaler.max)},set:function(max){max=this._fromUnits(max);this._scaler.max=max}});Object.defineProperty(Tone.LFO.prototype,"type",{get:function(){return this._oscillator.type},set:function(type){this._oscillator.type=type;this._stoppedValue=this._oscillator._getInitialValue();this._stoppedSignal.value=this._stoppedValue}});Object.defineProperty(Tone.LFO.prototype,"phase",{get:function(){return this._oscillator.phase},set:function(phase){this._oscillator.phase=phase;this._stoppedValue=this._oscillator._getInitialValue();this._stoppedSignal.value=this._stoppedValue}});Object.defineProperty(Tone.LFO.prototype,"units",{get:function(){return this._units},set:function(val){var currentMin=this.min;var currentMax=this.max;this._units=val;this.min=currentMin;this.max=currentMax}});Object.defineProperty(Tone.LFO.prototype,"state",{get:function(){return this._oscillator.state}});Tone.LFO.prototype.connect=function(node){if(node.constructor===Tone.Signal||node.constructor===Tone.Param||node.constructor===Tone.TimelineSignal){this.convert=node.convert;this.units=node.units}
Tone.Signal.prototype.connect.apply(this,arguments);return this};Tone.LFO.prototype._fromUnits=Tone.Param.prototype._fromUnits;Tone.LFO.prototype._toUnits=Tone.Param.prototype._toUnits;Tone.LFO.prototype.dispose=function(){Tone.prototype.dispose.call(this);this._writable(["amplitude","frequency"]);this._oscillator.dispose();this._oscillator=null;this._stoppedSignal.dispose();this._stoppedSignal=null;this._scaler.dispose();this._scaler=null;this._a2g.dispose();this._a2g=null;this.frequency=null;this.amplitude=null;return this};return Tone.LFO})