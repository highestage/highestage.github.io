define(["Tone/core/Tone","Tone/signal/Abs","Tone/signal/Subtract","Tone/signal/Multiply","Tone/signal/Signal","Tone/signal/WaveShaper","Tone/core/Type"],function(Tone){"use strict";Tone.Follower=function(){Tone.call(this);var options=this.optionsObject(arguments,["attack","release"],Tone.Follower.defaults);this._abs=new Tone.Abs();this._filter=this.context.createBiquadFilter();this._filter.type="lowpass";this._filter.frequency.value=0;this._filter.Q.value=-100;this._frequencyValues=new Tone.WaveShaper();this._sub=new Tone.Subtract();this._delay=this.context.createDelay();this._delay.delayTime.value=this.blockTime;this._mult=new Tone.Multiply(10000);this._attack=options.attack;this._release=options.release;this.input.chain(this._abs,this._filter,this.output);this._abs.connect(this._sub,0,1);this._filter.chain(this._delay,this._sub);this._sub.chain(this._mult,this._frequencyValues,this._filter.frequency);this._setAttackRelease(this._attack,this._release)};Tone.extend(Tone.Follower);Tone.Follower.defaults={"attack":0.05,"release":0.5};Tone.Follower.prototype._setAttackRelease=function(attack,release){var minTime=this.blockTime;attack=this.secondsToFrequency(this.toSeconds(attack));release=this.secondsToFrequency(this.toSeconds(release));attack=Math.max(attack,minTime);release=Math.max(release,minTime);this._frequencyValues.setMap(function(val){if(val<=0){return attack}else{return release}})};Object.defineProperty(Tone.Follower.prototype,"attack",{get:function(){return this._attack},set:function(attack){this._attack=attack;this._setAttackRelease(this._attack,this._release)}});Object.defineProperty(Tone.Follower.prototype,"release",{get:function(){return this._release},set:function(release){this._release=release;this._setAttackRelease(this._attack,this._release)}});Tone.Follower.prototype.connect=Tone.Signal.prototype.connect;Tone.Follower.prototype.dispose=function(){Tone.prototype.dispose.call(this);this._filter.disconnect();this._filter=null;this._frequencyValues.disconnect();this._frequencyValues=null;this._delay.disconnect();this._delay=null;this._sub.disconnect();this._sub=null;this._abs.dispose();this._abs=null;this._mult.dispose();this._mult=null;this._curve=null;return this};return Tone.Follower})