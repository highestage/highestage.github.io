define(["Tone/core/Tone","Tone/component/MidSideSplit","Tone/component/MidSideMerge","Tone/component/Compressor"],function(Tone){"use strict";Tone.MidSideCompressor=function(options){options=this.defaultArg(options,Tone.MidSideCompressor.defaults);this._midSideSplit=this.input=new Tone.MidSideSplit();this._midSideMerge=this.output=new Tone.MidSideMerge();this.mid=new Tone.Compressor(options.mid);this.side=new Tone.Compressor(options.side);this._midSideSplit.mid.chain(this.mid,this._midSideMerge.mid);this._midSideSplit.side.chain(this.side,this._midSideMerge.side);this._readOnly(["mid","side"])};Tone.extend(Tone.MidSideCompressor);Tone.MidSideCompressor.defaults={"mid":{"ratio":3,"threshold":-24,"release":0.03,"attack":0.02,"knee":16},"side":{"ratio":6,"threshold":-30,"release":0.25,"attack":0.03,"knee":10}};Tone.MidSideCompressor.prototype.dispose=function(){Tone.prototype.dispose.call(this);this._writable(["mid","side"]);this.mid.dispose();this.mid=null;this.side.dispose();this.side=null;this._midSideSplit.dispose();this._midSideSplit=null;this._midSideMerge.dispose();this._midSideMerge=null;return this};return Tone.MidSideCompressor})