define(["Tone/core/Tone"],function(Tone){"use strict";Tone.Type={Default:"number",Time:"time",Frequency:"frequency",NormalRange:"normalRange",AudioRange:"audioRange",Decibels:"db",Interval:"interval",BPM:"bpm",Positive:"positive",Cents:"cents",Degrees:"degrees",MIDI:"midi",TransportTime:"transportTime",Ticks:"tick",Note:"note",Milliseconds:"milliseconds",Notation:"notation",};Tone.prototype.isNowRelative=(function(){var nowRelative=new RegExp(/^\s*\+(.)+/i);return function(note){return nowRelative.test(note)}})();Tone.prototype.isTicks=(function(){var tickFormat=new RegExp(/^\d+i$/i);return function(note){return tickFormat.test(note)}})();Tone.prototype.isNotation=(function(){var notationFormat=new RegExp(/^[0-9]+[mnt]$/i);return function(note){return notationFormat.test(note)}})();Tone.prototype.isTransportTime=(function(){var transportTimeFormat=new RegExp(/^(\d+(\.\d+)?\:){1,2}(\d+(\.\d+)?)?$/i);return function(transportTime){return transportTimeFormat.test(transportTime)}})();Tone.prototype.isNote=(function(){var noteFormat=new RegExp(/^[a-g]{1}(b|#|x|bb)?-?[0-9]+$/i);return function(note){return noteFormat.test(note)}})();Tone.prototype.isFrequency=(function(){var freqFormat=new RegExp(/^\d*\.?\d+hz$/i);return function(freq){return freqFormat.test(freq)}})();function getTransportBpm(){if(Tone.Transport&&Tone.Transport.bpm){return Tone.Transport.bpm.value}else{return 120}}
function getTransportTimeSignature(){if(Tone.Transport&&Tone.Transport.timeSignature){return Tone.Transport.timeSignature}else{return 4}}
Tone.prototype.notationToSeconds=function(notation,bpm,timeSignature){bpm=this.defaultArg(bpm,getTransportBpm());timeSignature=this.defaultArg(timeSignature,getTransportTimeSignature());var beatTime=(60/bpm);if(notation==="1n"){notation="1m"}
var subdivision=parseInt(notation,10);var beats=0;if(subdivision===0){beats=0}
var lastLetter=notation.slice(-1);if(lastLetter==="t"){beats=(4/subdivision)*2/3}else if(lastLetter==="n"){beats=4/subdivision}else if(lastLetter==="m"){beats=subdivision*timeSignature}else{beats=0}
return beatTime*beats};Tone.prototype.transportTimeToSeconds=function(transportTime,bpm,timeSignature){bpm=this.defaultArg(bpm,getTransportBpm());timeSignature=this.defaultArg(timeSignature,getTransportTimeSignature());var measures=0;var quarters=0;var sixteenths=0;var split=transportTime.split(":");if(split.length===2){measures=parseFloat(split[0]);quarters=parseFloat(split[1])}else if(split.length===1){quarters=parseFloat(split[0])}else if(split.length===3){measures=parseFloat(split[0]);quarters=parseFloat(split[1]);sixteenths=parseFloat(split[2])}
var beats=(measures*timeSignature+quarters+sixteenths/4);return beats*(60/bpm)};Tone.prototype.ticksToSeconds=function(ticks,bpm){if(this.isUndef(Tone.Transport)){return 0}
ticks=parseFloat(ticks);bpm=this.defaultArg(bpm,getTransportBpm());var tickTime=(60/bpm)/Tone.Transport.PPQ;return tickTime*ticks};Tone.prototype.frequencyToSeconds=function(freq){return 1/parseFloat(freq)};Tone.prototype.samplesToSeconds=function(samples){return samples/this.context.sampleRate};Tone.prototype.secondsToSamples=function(seconds){return seconds*this.context.sampleRate};Tone.prototype.secondsToTransportTime=function(seconds,bpm,timeSignature){bpm=this.defaultArg(bpm,getTransportBpm());timeSignature=this.defaultArg(timeSignature,getTransportTimeSignature());var quarterTime=60/bpm;var quarters=seconds/quarterTime;var measures=Math.floor(quarters/timeSignature);var sixteenths=(quarters%1)*4;quarters=Math.floor(quarters)%timeSignature;var progress=[measures,quarters,sixteenths];return progress.join(":")};Tone.prototype.secondsToFrequency=function(seconds){return 1/seconds};Tone.prototype.toTransportTime=function(time,bpm,timeSignature){var seconds=this.toSeconds(time);return this.secondsToTransportTime(seconds,bpm,timeSignature)};Tone.prototype.toFrequency=function(freq,now){if(this.isFrequency(freq)){return parseFloat(freq)}else if(this.isNotation(freq)||this.isTransportTime(freq)){return this.secondsToFrequency(this.toSeconds(freq,now))}else if(this.isNote(freq)){return this.noteToFrequency(freq)}else{return freq}};Tone.prototype.toTicks=function(time){if(this.isUndef(Tone.Transport)){return 0}
var bpm=Tone.Transport.bpm.value;var plusNow=0;if(this.isNowRelative(time)){time=time.replace("+","");plusNow=Tone.Transport.ticks}else if(this.isUndef(time)){return Tone.Transport.ticks}
var seconds=this.toSeconds(time);var quarter=60/bpm;var quarters=seconds/quarter;var tickNum=quarters*Tone.Transport.PPQ;return Math.round(tickNum+plusNow)};Tone.prototype.toSamples=function(time){var seconds=this.toSeconds(time);return Math.round(seconds*this.context.sampleRate)};Tone.prototype.toSeconds=function(time,now){now=this.defaultArg(now,this.now());if(this.isNumber(time)){return time}else if(this.isString(time)){var plusTime=0;if(this.isNowRelative(time)){time=time.replace("+","");plusTime=now}
var betweenParens=time.match(/\(([^)(]+)\)/g);if(betweenParens){for(var j=0;j<betweenParens.length;j++){var symbol=betweenParens[j].replace(/[\(\)]/g,"");var symbolVal=this.toSeconds(symbol);time=time.replace(betweenParens[j],symbolVal)}}
if(time.indexOf("@")!==-1){var quantizationSplit=time.split("@");if(!this.isUndef(Tone.Transport)){var toQuantize=quantizationSplit[0].trim();if(toQuantize===""){toQuantize=undefined}
if(plusTime>0){toQuantize="+"+toQuantize;plusTime=0}
var subdivision=quantizationSplit[1].trim();time=Tone.Transport.quantize(toQuantize,subdivision)}else{throw new Error("quantization requires Tone.Transport")}}else{var components=time.split(/[\(\)\-\+\/\*]/);if(components.length>1){var originalTime=time;for(var i=0;i<components.length;i++){var symb=components[i].trim();if(symb!==""){var val=this.toSeconds(symb);time=time.replace(symb,val)}}
try{time=eval(time)}catch(e){throw new EvalError("cannot evaluate Time: "+originalTime)}}else if(this.isNotation(time)){time=this.notationToSeconds(time)}else if(this.isTransportTime(time)){time=this.transportTimeToSeconds(time)}else if(this.isFrequency(time)){time=this.frequencyToSeconds(time)}else if(this.isTicks(time)){time=this.ticksToSeconds(time)}else{time=parseFloat(time)}}
return time+plusTime}else{return now}};Tone.prototype.toNotation=function(time,bpm,timeSignature){var testNotations=["1m","2n","4n","8n","16n","32n","64n","128n"];var retNotation=toNotationHelper.call(this,time,bpm,timeSignature,testNotations);var testTripletNotations=["1m","2n","2t","4n","4t","8n","8t","16n","16t","32n","32t","64n","64t","128n"];var retTripletNotation=toNotationHelper.call(this,time,bpm,timeSignature,testTripletNotations);if(retTripletNotation.split("+").length<retNotation.split("+").length){return retTripletNotation}else{return retNotation}};function toNotationHelper(time,bpm,timeSignature,testNotations){var seconds=this.toSeconds(time);var threshold=this.notationToSeconds(testNotations[testNotations.length-1],bpm,timeSignature);var retNotation="";for(var i=0;i<testNotations.length;i++){var notationTime=this.notationToSeconds(testNotations[i],bpm,timeSignature);var multiple=seconds/notationTime;var floatingPointError=0.000001;if(1-multiple%1<floatingPointError){multiple+=floatingPointError}
multiple=Math.floor(multiple);if(multiple>0){if(multiple===1){retNotation+=testNotations[i]}else{retNotation+=multiple.toString()+"*"+testNotations[i]}
seconds-=multiple*notationTime;if(seconds<threshold){break}else{retNotation+=" + "}}}
if(retNotation===""){retNotation="0"}
return retNotation}
Tone.prototype.fromUnits=function(val,units){if(this.convert||this.isUndef(this.convert)){switch(units){case Tone.Type.Time:return this.toSeconds(val);case Tone.Type.Frequency:return this.toFrequency(val);case Tone.Type.Decibels:return this.dbToGain(val);case Tone.Type.NormalRange:return Math.min(Math.max(val,0),1);case Tone.Type.AudioRange:return Math.min(Math.max(val,-1),1);case Tone.Type.Positive:return Math.max(val,0);default:return val}}else{return val}};Tone.prototype.toUnits=function(val,units){if(this.convert||this.isUndef(this.convert)){switch(units){case Tone.Type.Decibels:return this.gainToDb(val);default:return val}}else{return val}};var noteToScaleIndex={"cbb":-2,"cb":-1,"c":0,"c#":1,"cx":2,"dbb":0,"db":1,"d":2,"d#":3,"dx":4,"ebb":2,"eb":3,"e":4,"e#":5,"ex":6,"fbb":3,"fb":4,"f":5,"f#":6,"fx":7,"gbb":5,"gb":6,"g":7,"g#":8,"gx":9,"abb":7,"ab":8,"a":9,"a#":10,"ax":11,"bbb":9,"bb":10,"b":11,"b#":12,"bx":13,};var scaleIndexToNote=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"];Tone.A4=440;Tone.prototype.noteToFrequency=function(note){var parts=note.split(/(-?\d+)/);if(parts.length===3){var index=noteToScaleIndex[parts[0].toLowerCase()];var octave=parts[1];var noteNumber=index+(parseInt(octave,10)+1)*12;return this.midiToFrequency(noteNumber)}else{return 0}};Tone.prototype.frequencyToNote=function(freq){var log=Math.log(freq/Tone.A4)/Math.LN2;var noteNumber=Math.round(12*log)+57;var octave=Math.floor(noteNumber/12);if(octave<0){noteNumber+=-12*octave}
var noteName=scaleIndexToNote[noteNumber%12];return noteName+octave.toString()};Tone.prototype.intervalToFrequencyRatio=function(interval){return Math.pow(2,(interval/12))};Tone.prototype.midiToNote=function(midiNumber){var octave=Math.floor(midiNumber/12)-1;var note=midiNumber%12;return scaleIndexToNote[note]+octave};Tone.prototype.noteToMidi=function(note){var parts=note.split(/(\d+)/);if(parts.length===3){var index=noteToScaleIndex[parts[0].toLowerCase()];var octave=parts[1];return index+(parseInt(octave,10)+1)*12}else{return 0}};Tone.prototype.midiToFrequency=function(midi){return Tone.A4*Math.pow(2,(midi-69)/12)};return Tone})