define(["Tone/core/Tone","Tone/core/Emitter"],function(Tone){"use strict";Tone.Buffer=function(){var options=this.optionsObject(arguments,["url","onload"],Tone.Buffer.defaults);this._buffer=null;this._reversed=options.reverse;this.url=undefined;this.loaded=!1;this.onload=options.onload.bind(this,this);if(options.url instanceof AudioBuffer||options.url instanceof Tone.Buffer){this.set(options.url);this.onload(this)}else if(this.isString(options.url)){this.url=options.url;Tone.Buffer._addToQueue(options.url,this)}};Tone.extend(Tone.Buffer);Tone.Buffer.defaults={"url":undefined,"onload":Tone.noOp,"reverse":!1};Tone.Buffer.prototype.set=function(buffer){if(buffer instanceof Tone.Buffer){this._buffer=buffer.get()}else{this._buffer=buffer}
this.loaded=!0;return this};Tone.Buffer.prototype.get=function(){return this._buffer};Tone.Buffer.prototype.load=function(url,callback){this.url=url;this.onload=this.defaultArg(callback,this.onload);Tone.Buffer._addToQueue(url,this);return this};Tone.Buffer.prototype.dispose=function(){Tone.prototype.dispose.call(this);Tone.Buffer._removeFromQueue(this);this._buffer=null;this.onload=Tone.Buffer.defaults.onload;return this};Object.defineProperty(Tone.Buffer.prototype,"duration",{get:function(){if(this._buffer){return this._buffer.duration}else{return 0}},});Tone.Buffer.prototype._reverse=function(rev){if(this.loaded&&this._buffer!==null&&(rev!==this._reversed)){for(var i=0;i<this._buffer.numberOfChannels;i++){Array.prototype.reverse.call(this._buffer.getChannelData(i))}
this._reversed=rev}
return this};Object.defineProperty(Tone.Buffer.prototype,"reverse",{get:function(){return this._reversed},set:function(rev){this._reverse(rev)},});Tone.Emitter.mixin(Tone.Buffer);Tone.Buffer._queue=[];Tone.Buffer._currentDownloads=[];Tone.Buffer._totalDownloads=0;Tone.Buffer.MAX_SIMULTANEOUS_DOWNLOADS=6;Tone.Buffer._addToQueue=function(url,buffer){Tone.Buffer._queue.push({url:url,Buffer:buffer,progress:0,xhr:null});this._totalDownloads++;Tone.Buffer._next()};Tone.Buffer._removeFromQueue=function(buffer){var i;for(i=0;i<Tone.Buffer._queue.length;i++){var q=Tone.Buffer._queue[i];if(q.Buffer===buffer){Tone.Buffer._queue.splice(i,1)}}
for(i=0;i<Tone.Buffer._currentDownloads.length;i++){var dl=Tone.Buffer._currentDownloads[i];if(dl.Buffer===buffer){Tone.Buffer._currentDownloads.splice(i,1);dl.xhr.abort();dl.xhr.onprogress=null;dl.xhr.onload=null;dl.xhr.onerror=null}}};Tone.Buffer._next=function(){if(Tone.Buffer._queue.length>0){if(Tone.Buffer._currentDownloads.length<Tone.Buffer.MAX_SIMULTANEOUS_DOWNLOADS){var next=Tone.Buffer._queue.shift();Tone.Buffer._currentDownloads.push(next);next.xhr=Tone.Buffer.load(next.url,function(buffer){var index=Tone.Buffer._currentDownloads.indexOf(next);Tone.Buffer._currentDownloads.splice(index,1);next.Buffer.set(buffer);if(next.Buffer._reversed){next.Buffer._reverse()}
next.Buffer.onload(next.Buffer);Tone.Buffer._onprogress();Tone.Buffer._next()});next.xhr.onprogress=function(event){next.progress=event.loaded/event.total;Tone.Buffer._onprogress()};next.xhr.onerror=function(e){Tone.Buffer.trigger("error",e)}}}else if(Tone.Buffer._currentDownloads.length===0){Tone.Buffer.trigger("load");Tone.Buffer._totalDownloads=0}};Tone.Buffer._onprogress=function(){var curretDownloadsProgress=0;var currentDLLen=Tone.Buffer._currentDownloads.length;var inprogress=0;if(currentDLLen>0){for(var i=0;i<currentDLLen;i++){var dl=Tone.Buffer._currentDownloads[i];curretDownloadsProgress+=dl.progress}
inprogress=curretDownloadsProgress}
var currentDownloadProgress=currentDLLen-inprogress;var completed=Tone.Buffer._totalDownloads-Tone.Buffer._queue.length-currentDownloadProgress;Tone.Buffer.trigger("progress",completed/Tone.Buffer._totalDownloads)};Tone.Buffer.load=function(url,callback){var request=new XMLHttpRequest();request.open("GET",url,!0);request.responseType="arraybuffer";request.onload=function(){Tone.context.decodeAudioData(request.response,function(buff){if(!buff){throw new Error("could not decode audio data:"+url)}
callback(buff)})};request.send();return request};Object.defineProperty(Tone.Buffer,"onload",{set:function(cb){console.warn("Tone.Buffer.onload is deprecated, use Tone.Buffer.on('load', callback)");Tone.Buffer.on("load",cb)}});Object.defineProperty(Tone.Buffer,"onprogress",{set:function(cb){console.warn("Tone.Buffer.onprogress is deprecated, use Tone.Buffer.on('progress', callback)");Tone.Buffer.on("progress",cb)}});Object.defineProperty(Tone.Buffer,"onerror",{set:function(cb){console.warn("Tone.Buffer.onerror is deprecated, use Tone.Buffer.on('error', callback)");Tone.Buffer.on("error",cb)}});return Tone.Buffer})